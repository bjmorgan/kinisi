[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kinisi"
dynamic = ["version"]
description = "Efficient estimation of diffusion processes from molecular dynamics."
readme = "README.md"
authors = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@bristol.ac.uk"}, 
    {name = "Benjamin J. Morgan", email="b.j.morgan@bath.ac.uk"}
]
maintainers = [
    {name = "Andrew R. McCluskey", email = "andrew.mccluskey@bristol.ac.uk"}, 
    {name = "Benjamin J. Morgan", email="b.j.morgan@bath.ac.uk"}
]
license = "MIT"
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Scientific/Engineering',
    'Topic :: Scientific/Engineering :: Chemistry',
    'Topic :: Scientific/Engineering :: Physics'
]
requires-python = ">=3.10"
dependencies = [
    'numpy>=2.0.0',
    'scikit-learn>=1.5.0',
    'scipy>=1.9.3',
    'tqdm',
    'statsmodels>=0.14.0',
    'scipp>=24.8.0',
    'uncertainties>=3.2.3',
    'bs4>=0.0.2',
    'emcee>=3.1.6',
    'dynesty>=2.1.5'
]

[project.optional-dependencies]
dev = [
    'pymatgen',
    'MDAnalysis>=2.8.0',
    'coverage',
    'codeclimate-test-reporter',
    'yapf',
    'pytest',
    'pytest-cov',
    'ase',
    'h5py',
    'pyblock',
    'ruff'
]

docs = [
    'pymatgen',
    'MDAnalysis>=2.8.0',
    'ase',
    'ipykernel',
    'nbsphinx',
    'corner',
    'sphinx_autodoc_typehints',
    'h5py',
    'pymatgen-analysis-diffusion',
    'pydata_sphinx_theme',
    'myst_parser'
]

[project.urls]
homepage = 'https://github.com/bjmorgan/kinisi'
documentation = 'https://kinisi.rtfd.io'

[tool.hatch.build]
include = ['kinisi']

[tool.hatch.version]
path = "kinisi/__init__.py"

[tool.coverage.run]
source = ['kinisi']

[tool.ruff]
line-length = 120

# Assume Python 3.10 or higher
target-version = "py310"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E", 
    # Pyflakes
    "F", 
    # pyupgrade
    "UP", 
    # flake8-bugbear
    "B",  
    # isort
    "I"]
ignore = ["E501"] # ignore line length violations

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # unused-import
"parser.py" = ["F821"] # unimported modules in type hints
"mdanalysis.py" = ["F821"] # unimported modules in type hints
"pymatgen.py" = ["F821"] # unimported modules in type hints
"ase.py" = ["F821"] # unimported modules in type hints
"analyzer.py" = ["F821"] # unimported modules in type hints
"conductivity_analyzer.py" = ["F821"] # unimported modules in type hints
"diffusion_analyzer.py" = ["F821"] # unimported modules in type hints
"jump_diffusion_analyzer.py" = ["F821"] # unimported modules in type hints

[tool.ruff.format]
quote-style = "single"